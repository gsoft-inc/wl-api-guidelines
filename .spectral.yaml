extends: [[spectral:oas, off]]
documentationUrl: https://gsoftdev.atlassian.net/wiki/spaces/TEC/pages/3858235678/IDP+OpenAPI+Rulesets
rules:
  duplicated-entry-in-enum: true
  no-eval-in-markdown: true
  no-script-tags-in-markdown: true
  openapi-tags-uniqueness: true
  operation-operationId-unique: true
  operation-success-response: true
  path-keys-no-trailing-slash: true
  path-params: true
  typed-enum: true
  oas3-schema: true
  oas3-operation-security-defined: true


  must-accept-content-types:
    description: "All endpoint bodies MUST accept the header with (one of) Content-Type: application/json, multipart/form-data, application/octet-stream."
    message: "{{description}}"
    severity: warn
    given: $.paths[*].*.requestBody.content
    then:
      field: "@key"
      function: enumeration
      functionOptions:
        values:
          -  application/json
          -  multipart/form-data
          -  application/octet-stream

  must-return-content-types:
    description: "All endpoint bodies MUST return the header with (one of) Content-Type: application/json, image/png, application/octet-stream."
    message: "{{description}}"
    severity: warn
    given: $.paths[*].*.responses.*.content
    then:
      field: "@key"
      function: enumeration
      functionOptions:
        values:
          -  application/json
          -  image/png
          -  application/octet-stream

  schema-ids-must-have-alphanumeric-characters-only:
    description: 'All schema ids must only contain alphanumeric characters.'
    given: "$.components.schemas"
    severity: error
    then:
      field: "@key"
      function: pattern
      functionOptions:
        match: '^[a-zA-Z0-9]+$'

  must-support-client-credentials-oauth2:
    description: "Contract must support client credentials with oauth2."
    recommended: true
    severity: warn
    given: $.components.securitySchemes.*
    then:
      field: type
      function: enumeration
      functionOptions:
        values:
          - oauth2

  properties-must-have-a-type:
    description: "All properties must have a type."
    recommended: true
    severity: warn
    given: $..properties.*
    then:
      field: type
      function: truthy

  schema-object-must-have-a-type:
    description: "All properties must have a type."
    recommended: true
    severity: warn
    given: $.components.schemas.*
    then:
      field: type
      function: truthy

  items-must-have-a-type:
    description: "All items must have a type."
    recommended: true
    severity: warn
    given: $.components.schemas..items
    then:
      field: type
      function: truthy

  application-json-response-must-not-be-type-string:
    description: "Responses of type application/json must not be of type string. Having a type:string as a response causes the client generation to fail."
    recommended: true
    severity: warn
    given: $..responses..content..application/json.schema.*
    then:
      field: type
      function: pattern
      functionOptions:
        notMatch: 'string'
